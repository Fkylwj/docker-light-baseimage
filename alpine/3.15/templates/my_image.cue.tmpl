package my_image

import (
    "dagger.io/dagger"
    "universe.dagger.io/docker"
)

// This action builds a docker image from ${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_TAG}.
// Build steps are defined in native CUE.
#Build: {

    // Image name
    name?: string

    // Image version
    version?: string

    // Environement directory
    environment: dagger.#FS
 
    // Service directory
    services: dagger.#FS

    // Container image
    image: _build.output

    // Build steps
    _build: docker.#Build & {
        steps: [
            docker.#Pull & {
                source: "${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_TAG}"
            },
            if name && version {
                docker.#Set & {
                    config: core.#ImageConfig & {
                        env: {
                            CONTAINER_IMAGE_NAME: name
                            CONTAINER_IMAGE_TAG: version
                        }
                    }
                },
            }
            docker.#Run & {
                entrypoint: ["/bin/bash", "-c", "apt -y update && install-and-clean && [....]"]
            },
            docker.#Copy & {
                contents: servicesDirectory
                dest:     "/container/services"
            },
            docker.#Run & {
                entrypoint: ["/container/tools/install-services"]
            },
            docker.#Copy & {
                contents: environmentDirectory
                dest:     "/container/environment/${ENVIRONMENT_DIRECTORY}"
            },
        ]
    }
}

// Example usage in a plan
dagger.#Plan & {
    client: {
        filesystem: {
            "./environment": read: contents: dagger.#FS
            "./services": read: contents: dagger.#FS
        }
        env: {
            IMAGE_NAME?: string
            IMAGE_VERSION?: string
        }
    }

    actions: build: #Build & {
        name: client.env.IMAGE_NAME
        version: client.env.IMAGE_VERSION

        environment: client.filesystem."./environment".read.contents
        services: client.filesystem."./services".read.contents
    }
}
